// ==========================================================================
// Define the size of the breakpoints using the syntax of coffee 
// sizes established in variables
// ==========================================================================
@mixin breakpoint($point, $var:"min-width") {
  @if $point == short {
    @media only screen and ($var: $short) { @content; }
  }
  @else if $point == tall {
    @media only screen and ($var: $tall) { @content; }
  }
  @else if $point == grande {
    @media only screen and ($var: $grande)  { @content; }
  }
  @else if $point == venti {
    @media only screen and ($var: $venti) { @content; }
  }
  @else if $point == trenta {
    @media only screen and ($var: $trenta)  { @content; }
  }
}
// ==========================================================================
// Define the retina display media query
// ==========================================================================
@mixin retina($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    // on retina, use image that's scaled by 2
    background: url($image);
    background-size: $width $height;
  }
}

// ==========================================================================
// Emboss effect in a box
// ==========================================================================
@mixin box-emboss($opacity, $opacity2){
  box-shadow:white($opacity) 0 1px 0, inset black($opacity2) 0 -4px 0;
}

@mixin box-emboss-inverted($opacity, $opacity2){
  box-shadow:white($opacity) 0 -1px 0, inset black($opacity2) 0 3px 0;
}

// ==========================================================================
// Same as Emboss but in text
// ==========================================================================
@mixin letterpress($color, $opacity){
  text-shadow: rgba($color ,$opacity) 0 1px 0;
}

// ==========================================================================
// Hide text
// ==========================================================================
@mixin hide-text{
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

// ==========================================================================
// Horizontal navigation list
// ==========================================================================
@mixin navigation-list {
  list-style-type:none;
  padding:0;
  margin:0;
  overflow:hidden;
  > li{
    display:block;
    float:left;
    &:last-child{
      margin-right:0px;
    }
  }
}

// ==========================================================================
// Set the opacity for the broswer and
// provide a filter fallback for IE8
// ==========================================================================
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// ==========================================================================
// Center an element inside it's parent
// parent needs to have a width
// ==========================================================================
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// ==========================================================================
// Text overflow with ellipsis
// ==========================================================================
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  // FF bug fix
  vertical-align: top;
  display: inline-block;
}

// ==========================================================================
// Sets the font size in rem's with a px fallback.
// ==========================================================================
@mixin font-size($size: 12, $base: 16) {
  font-size: $size + px; // fallback for old browsers
  font-size: ($size / $base) * 1rem;
}

// ==========================================================================
// Sets the line height in rem's with a px fallback.
// ==========================================================================
@mixin line-height($size, $base: 16) {
  line-height: $size + px; // fallback for old browsers
  line-height: ($size / $base) * 1rem;
}

// ==========================================================================
// Absolute positioning of an objet / remenber to use relative position in
// parent element, unless it's going to be on the body
// ==========================================================================
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

// ==========================================================================
// A calc function for single properties
// ==========================================================================
@mixin calc($property, $expression) { 
  #{$property}: -moz-calc(#{$expression}); 
  #{$property}: -o-calc(#{$expression}); 
  #{$property}: -webkit-calc(#{$expression}); 
  #{$property}: calc(#{$expression}); 
} 